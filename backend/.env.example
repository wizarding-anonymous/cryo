# Global Environment Configuration
# Copy this file to .env and update the values

# Environment
NODE_ENV=development
GO_ENV=development

# Database Configuration
# For services running in Docker, use container names
POSTGRES_HOST=postgres-[service]-db  # Replace [service] with actual service name
POSTGRES_PORT=5432

# Service-specific database credentials
POSTGRES_USER_DB=user_db
POSTGRES_USER_USER=user_service
POSTGRES_USER_PASSWORD=user_password

POSTGRES_CATALOG_DB=catalog_db
POSTGRES_CATALOG_USER=catalog_service
POSTGRES_CATALOG_PASSWORD=catalog_password

POSTGRES_LIBRARY_DB=library_db
POSTGRES_LIBRARY_USER=library_service
POSTGRES_LIBRARY_PASSWORD=library_password

POSTGRES_REVIEW_DB=review_db
POSTGRES_REVIEW_USER=review_service
POSTGRES_REVIEW_PASSWORD=review_password

POSTGRES_PAYMENT_DB=payment_db
POSTGRES_PAYMENT_USER=payment_service
POSTGRES_PAYMENT_PASSWORD=payment_password

POSTGRES_NOTIFICATION_DB=notification_db
POSTGRES_NOTIFICATION_USER=notification_service
POSTGRES_NOTIFICATION_PASSWORD=notification_password

POSTGRES_SOCIAL_DB=social_db
POSTGRES_SOCIAL_USER=social_service
POSTGRES_SOCIAL_PASSWORD=social_password

POSTGRES_ACHIEVEMENT_DB=achievement_db
POSTGRES_ACHIEVEMENT_USER=achievement_service
POSTGRES_ACHIEVEMENT_PASSWORD=achievement_password

POSTGRES_SECURITY_DB=security_db
POSTGRES_SECURITY_USER=security_service
POSTGRES_SECURITY_PASSWORD=security_password

POSTGRES_DOWNLOAD_DB=download_db
POSTGRES_DOWNLOAD_USER=download_service
POSTGRES_DOWNLOAD_PASSWORD=download_password

# Auth Service Database Configuration
POSTGRES_AUTH_DB=auth_db
POSTGRES_AUTH_USER=auth_service
POSTGRES_AUTH_PASSWORD=auth_password

# Redis Configuration
# For services running in Docker, use container name
REDIS_HOST=redis-cache
REDIS_PORT=6379
REDIS_PASSWORD=redis_password
REDIS_DB=0
REDIS_URL=redis://:redis_password@redis-cache:6379/0

# Auth Service Redis Configuration
AUTH_REDIS_HOST=redis-cache
AUTH_REDIS_PORT=6379
AUTH_REDIS_PASSWORD=redis_password
AUTH_REDIS_DB=1
AUTH_REDIS_URL=redis://:redis_password@redis-cache:6379/1
AUTH_REDIS_TTL=86400
AUTH_REDIS_MAX_RETRIES=3
AUTH_REDIS_RETRY_DELAY=1000

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production
JWT_EXPIRES_IN=1h
JWT_REFRESH_EXPIRES_IN=7d
JWT_ISSUER=cryo-gaming-platform
JWT_AUDIENCE=cryo-users

# Auth Service specific JWT configuration
AUTH_JWT_SECRET=auth-service-super-secret-jwt-key-change-in-production
AUTH_JWT_REFRESH_SECRET=auth-service-super-secret-refresh-key-change-in-production
AUTH_JWT_EXPIRES_IN=1h
AUTH_JWT_REFRESH_EXPIRES_IN=7d
AUTH_JWT_ISSUER=cryo-auth-service
AUTH_JWT_AUDIENCE=cryo-platform

# API Keys
PAYMENT_API_KEY=your-payment-provider-api-key
EMAIL_API_KEY=your-email-service-api-key
SMS_API_KEY=your-sms-service-api-key

# External Services
STEAM_API_KEY=your-steam-api-key
EPIC_GAMES_API_KEY=your-epic-games-api-key

# File Storage
STORAGE_TYPE=local
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
AWS_S3_BUCKET=your-s3-bucket

# Monitoring
PROMETHEUS_ENABLED=true
METRICS_PORT=9090
LOG_LEVEL=info
LOG_FORMAT=json

# Rate Limiting
RATE_LIMIT_WINDOW=15
RATE_LIMIT_MAX_REQUESTS=100

# CORS
CORS_ORIGIN=http://localhost:3000,http://localhost:3001
CORS_CREDENTIALS=true

# Security
BCRYPT_ROUNDS=12
SESSION_SECRET=your-session-secret-change-this-in-production

# Email Configuration
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-email-password
SMTP_FROM=noreply@yourdomain.com

# Notification Configuration
PUSH_NOTIFICATION_KEY=your-push-notification-key
WEBHOOK_SECRET=your-webhook-secret

# Microservice URLs Configuration
# Internal service communication URLs (Docker network)
USER_SERVICE_URL=http://user-service:3002
AUTH_SERVICE_URL=http://auth-service:3001
GAME_CATALOG_SERVICE_URL=http://game-catalog-service:3003
LIBRARY_SERVICE_URL=http://library-service:3004
REVIEW_SERVICE_URL=http://review-service:3005
PAYMENT_SERVICE_URL=http://payment-service:3006
NOTIFICATION_SERVICE_URL=http://notification-service:3007
SOCIAL_SERVICE_URL=http://social-service:3008
ACHIEVEMENT_SERVICE_URL=http://achievement-service:3009
SECURITY_SERVICE_URL=http://security-service:3010
DOWNLOAD_SERVICE_URL=http://download-service:8080
API_GATEWAY_URL=http://api-gateway:3000

# External service URLs (for local development)
USER_SERVICE_LOCAL_URL=http://localhost:3002
AUTH_SERVICE_LOCAL_URL=http://localhost:3001
SECURITY_SERVICE_LOCAL_URL=http://localhost:3010
NOTIFICATION_SERVICE_LOCAL_URL=http://localhost:3007

# Service Health Check Endpoints
USER_SERVICE_HEALTH_URL=http://user-service:3002/health
AUTH_SERVICE_HEALTH_URL=http://auth-service:3001/health
SECURITY_SERVICE_HEALTH_URL=http://security-service:3010/health
NOTIFICATION_SERVICE_HEALTH_URL=http://notification-service:3007/health

# Development Tools (only for development)
PGADMIN_DEFAULT_EMAIL=admin@admin.com
PGADMIN_DEFAULT_PASSWORD=admin
REDIS_COMMANDER_PORT=8081

# Auth Service Specific Configuration
AUTH_JWT_SECRET=auth-service-super-secret-jwt-key-change-in-production
AUTH_JWT_REFRESH_SECRET=auth-service-super-secret-refresh-key-change-in-production

# Circuit Breaker Configuration
CIRCUIT_BREAKER_TIMEOUT=3000
CIRCUIT_BREAKER_ERROR_THRESHOLD=50
CIRCUIT_BREAKER_RESET_TIMEOUT=30000

# Event Bus Configuration
EVENT_BUS_RETRY_ATTEMPTS=3
EVENT_BUS_RETRY_DELAY=1000
SECURITY_EVENTS_QUEUE=security-events
NOTIFICATION_EVENTS_QUEUE=notification-events
USER_EVENTS_QUEUE=user-events

# Session Configuration
SESSION_CLEANUP_INTERVAL=3600000
SESSION_MAX_AGE=86400000
MAX_SESSIONS_PER_USER=5

# Saga Pattern Configuration
USE_SAGA_PATTERN=true
SAGA_TIMEOUT=30000
SAGA_MAX_RETRIES=3
SAGA_LOCK_TTL=60000

# Idempotency Configuration
IDEMPOTENCY_TTL_SECONDS=86400
IDEMPOTENCY_ENABLED=true

# Production Settings (override in production)
# SSL_CERT_PATH=/path/to/ssl/cert.pem
# SSL_KEY_PATH=/path/to/ssl/key.pem
# DOMAIN=yourdomain.com