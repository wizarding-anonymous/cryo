services:
  # Library Service
  library-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: library-service-dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: library_service
      DATABASE_SYNCHRONIZE: "true"
      DATABASE_LOGGING: "true"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_TTL: 300
      JWT_SECRET: dev-secret-key-change-in-production
      GAMES_CATALOG_SERVICE_URL: http://game-catalog-mock:1080
      USER_SERVICE_URL: http://user-service-mock:1080
      PAYMENT_SERVICE_URL: http://payment-service-mock:1080
      LOG_LEVEL: debug
      PROMETHEUS_ENABLED: "true"
      HEALTH_CHECK_TIMEOUT: 5000
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      game-catalog-mock:
        condition: service_started
      user-service-mock:
        condition: service_started
      payment-service-mock:
        condition: service_started
    networks:
      - library-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: library-service-postgres
    environment:
      POSTGRES_DB: library_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d library_service"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - library-network
    restart: unless-stopped
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c work_mem=4MB
      -c maintenance_work_mem=64MB

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: library-service-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - library-network
    restart: unless-stopped
    command: >
      redis-server
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --appendonly yes

  # Mock Game Catalog Service
  game-catalog-mock:
    image: mockserver/mockserver:5.15.0
    container_name: game-catalog-mock
    ports:
      - "3001:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/game-catalog-expectations.json
      MOCKSERVER_LOG_LEVEL: INFO
    volumes:
      - ./mocks/game-catalog:/config:ro
    networks:
      - library-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1080/mockserver/status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mock User Service
  user-service-mock:
    image: mockserver/mockserver:5.15.0
    container_name: user-service-mock
    ports:
      - "3002:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/user-service-expectations.json
      MOCKSERVER_LOG_LEVEL: INFO
    volumes:
      - ./mocks/user-service:/config:ro
    networks:
      - library-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1080/mockserver/status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mock Payment Service
  payment-service-mock:
    image: mockserver/mockserver:5.15.0
    container_name: payment-service-mock
    ports:
      - "3003:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/payment-service-expectations.json
      MOCKSERVER_LOG_LEVEL: INFO
    volumes:
      - ./mocks/payment-service:/config:ro
    networks:
      - library-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1080/mockserver/status"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  library-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
