{
  "name": "library-service",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "npx nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:e2e:cov": "jest --config ./test/jest-e2e.json --coverage",
    "test:e2e:docker": "docker-compose -f docker-compose.test.yml up -d --wait && npm run test:e2e && docker-compose -f docker-compose.test.yml down",
    "test:db:up": "docker-compose -f docker-compose.test.yml up -d --wait",
    "test:db:down": "docker-compose -f docker-compose.test.yml down",
    "test:all": "npm run test:cov && npm run test:e2e:cov",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "typeorm": "npm run build && npx typeorm -d ./dist/data-source.js",
    "migration:create": "npm run typeorm -- migration:create",
    "migration:generate": "npm run build && npx typeorm -d dist/data-source.js migration:generate",
    "migration:run": "npm run typeorm -- migration:run",
    "migration:revert": "npm run typeorm -- migration:revert",
    "migration:show": "npm run typeorm -- migration:show",
    "migration:run:prod": "node scripts/run-migrations.js",
    "docker:build": "docker build -t library-service .",
    "docker:build:dev": "docker build --target development -t library-service:dev .",
    "docker:build:prod": "docker build --target production -t library-service:prod .",
    "docker:run": "docker run -p 3000:3000 library-service",
    "docker:dev": "docker-compose up --build",
    "docker:dev:down": "docker-compose down",
    "docker:dev:only": "docker-compose -f docker-compose.dev.yml up --build",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up -d",
    "docker:prod:down": "docker-compose -f docker-compose.prod.yml down",
    "docker:prod:logs": "docker-compose -f docker-compose.prod.yml logs -f",
    "docker:test": "chmod +x ./scripts/test-with-db.sh && ./scripts/test-with-db.sh",
    "docker:test:win": "powershell -ExecutionPolicy Bypass -File ./scripts/test-with-db.ps1",
    "docker:health": "chmod +x ./scripts/health-check.sh && ./scripts/health-check.sh",
    "docker:health:win": "powershell -ExecutionPolicy Bypass -File ./scripts/health-check.ps1",
    "docker:setup:prod": "chmod +x ./scripts/setup-production.sh && ./scripts/setup-production.sh",
    "docker:setup:prod:win": "powershell -ExecutionPolicy Bypass -File ./scripts/setup-production.ps1",
    "perf:test": "chmod +x ./scripts/run-performance-tests.sh && ./scripts/run-performance-tests.sh",
    "perf:test:win": "powershell -ExecutionPolicy Bypass -File ./scripts/run-performance-tests.ps1",
    "perf:test:basic": "chmod +x ./scripts/run-performance-tests.sh && ./scripts/run-performance-tests.sh basic",
    "perf:test:suite": "chmod +x ./scripts/run-performance-tests.sh && ./scripts/run-performance-tests.sh suite",
    "perf:test:database": "chmod +x ./scripts/run-performance-tests.sh && ./scripts/run-performance-tests.sh database",
    "perf:test:jest": "chmod +x ./scripts/run-performance-tests.sh && ./scripts/run-performance-tests.sh jest",
    "perf:benchmark": "npm run test:e2e -- --testNamePattern=\"Benchmark\" --verbose",
    "perf:monitor": "npm run test:e2e -- --testNamePattern=\"Performance Monitor\" --verbose",
    "prod:start": "chmod +x ./scripts/start-production.sh && ./scripts/start-production.sh",
    "prod:start:win": "powershell -ExecutionPolicy Bypass -File ./scripts/start-production.ps1",
    "prod:validate": "node -e \"require('./dist/config/production.config').validateProductionConfig()\"",
    "prod:health": "curl -f http://localhost:3000/health || exit 1",
    "prod:metrics": "curl -s http://localhost:3000/metrics",
    "prod:logs": "tail -f logs/library-service.log",
    "prod:logs:error": "tail -f logs/library-service-error.log"
  },
  "dependencies": {
    "@nestjs/axios": "^3.0.2",
    "@nestjs/cache-manager": "^2.2.2",
    "@nestjs/common": "^10.3.10",
    "@nestjs/config": "^3.2.3",
    "@nestjs/core": "^10.3.10",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/microservices": "^10.3.10",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.3.10",
    "@nestjs/schedule": "^6.0.1",
    "@nestjs/swagger": "^7.4.0",
    "@nestjs/terminus": "^10.2.3",
    "@nestjs/typeorm": "^10.0.2",
    "@willsoto/nestjs-prometheus": "^6.0.0",
    "cache-manager": "^5.7.6",
    "cache-manager-redis-yet": "^5.1.5",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "elastic-apm-node": "^4.5.0",
    "kafkajs": "^2.2.4",
    "nest-winston": "^1.9.4",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.16.3",
    "prom-client": "^15.1.2",
    "redis": "^5.8.2",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.26",
    "uuid": "^13.0.0",
    "winston": "^3.13.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^10.4.2",
    "@nestjs/schematics": "^10.1.3",
    "@nestjs/testing": "^10.3.10",
    "@types/express": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.10.7",
    "@types/passport-jwt": "^4.0.1",
    "@types/pg": "^8.15.5",
    "@types/redis": "^4.0.10",
    "@types/supertest": "^6.0.3",
    "@types/uuid": "^10.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^30.0.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.4",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": "(src|test/migrations)/.*\\.spec\\.ts$",
    "roots": ["<rootDir>/src", "<rootDir>/test/migrations"],
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s",
      "!**/*.d.ts",
      "!**/node_modules/**",
      "!**/dist/**",
      "!**/*.interface.ts",
      "!**/*.enum.ts",
      "!src/migrations/**/*",
      "!**/main.ts"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    },
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/$1"
    }
  }
}
