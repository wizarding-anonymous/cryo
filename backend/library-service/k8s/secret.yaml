apiVersion: v1
kind: Secret
metadata:
  name: library-service-secrets
  labels:
    app: library-service
    component: backend
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded secrets
  # Use: echo -n "your-secret" | base64
  DATABASE_USERNAME: bGlicmFyeV91c2Vy # library_user
  DATABASE_PASSWORD: Y2hhbmdlLW1lLXBsZWFzZQ== # change-me-please
  JWT_SECRET: Y2hhbmdlLW1lLXBsZWFzZS1qd3Qtc2VjcmV0 # change-me-please-jwt-secret
  REDIS_PASSWORD: Y2hhbmdlLW1lLXBsZWFzZS1yZWRpcw== # change-me-please-redis
  API_KEY: Y2hhbmdlLW1lLXBsZWFzZS1hcGkta2V5 # change-me-please-api-key
---
# Example of using external secret management (uncomment if using external secrets)
# apiVersion: external-secrets.io/v1beta1
# kind: SecretStore
# metadata:
#   name: library-service-secret-store
#   labels:
#     app: library-service
# spec:
#   provider:
#     aws:
#       service: SecretsManager
#       region: us-west-2
#       auth:
#         jwt:
#           serviceAccountRef:
#             name: library-service
# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: library-service-external-secret
#   labels:
#     app: library-service
# spec:
#   refreshInterval: 1h
#   secretStoreRef:
#     name: library-service-secret-store
#     kind: SecretStore
#   target:
#     name: library-service-secrets
#     creationPolicy: Owner
#   data:
#   - secretKey: DATABASE_PASSWORD
#     remoteRef:
#       key: library-service/database
#       property: password
#   - secretKey: JWT_SECRET
#     remoteRef:
#       key: library-service/jwt
#       property: secret