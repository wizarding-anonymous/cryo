version: '3.8'

services:
  # Test PostgreSQL Database
  postgres-test:
    image: postgres:14-alpine
    container_name: library-service-postgres-test
    environment:
      POSTGRES_DB: library_service_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test_password
    ports:
      - "5433:5432"
    volumes:
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - test-network

  # Test Redis Cache
  redis-test:
    image: redis:7-alpine
    container_name: library-service-redis-test
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - test-network

  # Mock Game Catalog Service for E2E tests
  game-catalog-test:
    image: mockserver/mockserver:5.15.0
    container_name: game-catalog-test
    ports:
      - "3011:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/game-catalog-expectations.json
    volumes:
      - ./mocks/game-catalog:/config
    networks:
      - test-network

  # Mock User Service for E2E tests
  user-service-test:
    image: mockserver/mockserver:5.15.0
    container_name: user-service-test
    ports:
      - "3012:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/user-service-expectations.json
    volumes:
      - ./mocks/user-service:/config
    networks:
      - test-network

  # Mock Payment Service for E2E tests
  payment-service-test:
    image: mockserver/mockserver:5.15.0
    container_name: payment-service-test
    ports:
      - "3013:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/payment-service-expectations.json
    volumes:
      - ./mocks/payment-service:/config
    networks:
      - test-network

networks:
  test-network:
    driver: bridge