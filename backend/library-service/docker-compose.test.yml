# Test environment docker-compose file
# Used for running integration and e2e tests

services:
  # PostgreSQL Database - Test
  postgres-test:
    image: postgres:14-alpine
    container_name: library-service-postgres-test
    environment:
      POSTGRES_DB: library_service_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d library_service_test"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - library-test-network
    restart: unless-stopped
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=50
      -c shared_buffers=128MB
      -c effective_cache_size=512MB
      -c work_mem=2MB
      -c maintenance_work_mem=32MB
      -c fsync=off
      -c synchronous_commit=off
      -c checkpoint_segments=32
      -c checkpoint_completion_target=0.9

  # Redis Cache - Test
  redis-test:
    image: redis:7-alpine
    container_name: library-service-redis-test
    ports:
      - "6380:6379"
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - library-test-network
    restart: unless-stopped
    command: >
      redis-server
      --maxmemory 64mb
      --maxmemory-policy allkeys-lru
      --save ""
      --appendonly no

  # Mock Game Catalog Service - Test
  game-catalog-mock-test:
    image: mockserver/mockserver:5.15.0
    container_name: game-catalog-mock-test
    ports:
      - "3011:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/game-catalog-expectations.json
      MOCKSERVER_LOG_LEVEL: WARN
    volumes:
      - ./mocks/game-catalog:/config:ro
    networks:
      - library-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1080/mockserver/status"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Mock User Service - Test
  user-service-mock-test:
    image: mockserver/mockserver:5.15.0
    container_name: user-service-mock-test
    ports:
      - "3012:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/user-service-expectations.json
      MOCKSERVER_LOG_LEVEL: WARN
    volumes:
      - ./mocks/user-service:/config:ro
    networks:
      - library-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1080/mockserver/status"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Mock Payment Service - Test
  payment-service-mock-test:
    image: mockserver/mockserver:5.15.0
    container_name: payment-service-mock-test
    ports:
      - "3013:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/payment-service-expectations.json
      MOCKSERVER_LOG_LEVEL: WARN
    volumes:
      - ./mocks/payment-service:/config:ro
    networks:
      - library-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1080/mockserver/status"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_test_data:
    driver: local
  redis_test_data:
    driver: local

networks:
  library-test-network:
    driver: bridge