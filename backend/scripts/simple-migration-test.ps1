#!/usr/bin/env pwsh
# –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ Auth Service
# –ó–∞–¥–∞—á–∞ 15.2: Validate migration with existing data

Write-Host "üîÑ –ó–ê–î–ê–ß–ê 15.2: –í–∞–ª–∏–¥–∞—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏" -ForegroundColor Cyan
Write-Host "================================================================" -ForegroundColor Cyan

$AUTH_SERVICE_URL = "http://localhost:3001"
$USER_SERVICE_URL = "http://localhost:3002"

Write-Host ""
Write-Host "=== –≠–¢–ê–ü 1: –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø –°–ï–†–í–ò–°–û–í ===" -ForegroundColor Magenta

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Auth Service
Write-Host "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ Auth Service..." -ForegroundColor Yellow
try {
    $authHealth = Invoke-RestMethod -Uri "$AUTH_SERVICE_URL/api/health" -Method GET
    Write-Host "  ‚úÖ Auth Service health check: OK" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå Auth Service health check: FAILED - $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ User Service
Write-Host "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ User Service..." -ForegroundColor Yellow
try {
    $userHealth = Invoke-RestMethod -Uri "$USER_SERVICE_URL/api/health" -Method GET
    Write-Host "  ‚úÖ User Service health check: OK" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå User Service health check: FAILED - $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "=== –≠–¢–ê–ü 2: –¢–ï–°–¢ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –ò –ò–ù–¢–ï–ì–†–ê–¶–ò–ò ===" -ForegroundColor Magenta

# –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
$testEmail = "migration-test-$timestamp@example.com"
$testPassword = "TestPassword123!"

Write-Host "üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Auth Service..." -ForegroundColor Yellow

$registerData = @{
    email = $testEmail
    password = $testPassword
    name = "Migration Test User"
} | ConvertTo-Json

try {
    $registerResponse = Invoke-RestMethod -Uri "$AUTH_SERVICE_URL/api/auth/register" -Method POST -Body $registerData -ContentType "application/json"
    Write-Host "  ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: $($registerResponse.user.email)" -ForegroundColor Green
    
    $userId = $registerResponse.user.id
    $accessToken = $registerResponse.accessToken
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–ª—Å—è –≤ User Service
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ User Service..." -ForegroundColor Yellow
    try {
        $userResponse = Invoke-RestMethod -Uri "$USER_SERVICE_URL/users/$userId" -Method GET
        Write-Host "  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ User Service: $($userResponse.email)" -ForegroundColor Green
    } catch {
        Write-Host "  ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ User Service: $($_.Exception.Message)" -ForegroundColor Red
        exit 1
    }
    
} catch {
    Write-Host "  ‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ—É—Å–ø–µ—à–Ω–∞: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "=== –≠–¢–ê–ü 3: –¢–ï–°–¢ JWT –¢–û–ö–ï–ù–û–í ===" -ForegroundColor Magenta

Write-Host "üîê –í–∞–ª–∏–¥–∞—Ü–∏—è JWT —Ç–æ–∫–µ–Ω–∞..." -ForegroundColor Yellow

$validateData = @{
    token = $accessToken
} | ConvertTo-Json

try {
    $validateResponse = Invoke-RestMethod -Uri "$AUTH_SERVICE_URL/api/auth/validate" -Method POST -Body $validateData -ContentType "application/json"
    Write-Host "  ‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω: $($validateResponse.userId)" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "=== –≠–¢–ê–ü 4: –¢–ï–°–¢ –õ–û–ì–ò–ù–ê ===" -ForegroundColor Magenta

Write-Host "üîë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–Ω–∞..." -ForegroundColor Yellow

$loginData = @{
    email = $testEmail
    password = $testPassword
} | ConvertTo-Json

try {
    $loginResponse = Invoke-RestMethod -Uri "$AUTH_SERVICE_URL/api/auth/login" -Method POST -Body $loginData -ContentType "application/json"
    Write-Host "  ‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω: $($loginResponse.user.email)" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå –õ–æ–≥–∏–Ω –Ω–µ—É—Å–ø–µ—à–µ–Ω: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "=== –≠–¢–ê–ü 5: –¢–ï–°–¢ USER SERVICE –î–ê–ù–ù–´–• ===" -ForegroundColor Magenta

Write-Host "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ User Service –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ..." -ForegroundColor Yellow

try {
    $existsResponse = Invoke-RestMethod -Uri "$USER_SERVICE_URL/users/$userId/exists" -Method GET
    if ($existsResponse.exists) {
        Write-Host "  ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "================================================================" -ForegroundColor Cyan
Write-Host "üéâ –í–°–ï –¢–ï–°–¢–´ –ú–ò–ì–†–ê–¶–ò–ò –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!" -ForegroundColor Green
Write-Host "‚úÖ Auth Service –≥–æ—Ç–æ–≤ –∫ production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é" -ForegroundColor Green
Write-Host "‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å User Service —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ" -ForegroundColor Green
Write-Host "‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã" -ForegroundColor Green
Write-Host "‚úÖ JWT —Ç–æ–∫–µ–Ω—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ" -ForegroundColor Green
Write-Host ""
Write-Host "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:" -ForegroundColor Cyan
Write-Host "  - –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $testEmail" -ForegroundColor White
Write-Host "  - User ID: $userId" -ForegroundColor White
Write-Host "  - Auth Service: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor White
Write-Host "  - User Service: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor White
Write-Host "  - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor White

exit 0