{
  "name": "achievement-service",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "start:prod:script": "bash scripts/start-production.sh",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:e2e:watch": "jest --config ./test/jest-e2e.json --watch",
    "test:e2e:cov": "jest --config ./test/jest-e2e.json --coverage",
    "test:integration": "jest --config ./test/jest-integration.json",
    "test:integration:watch": "jest --config ./test/jest-integration.json --watch",
    "test:performance": "jest --config ./test/jest-performance.json",
    "test:performance:watch": "jest --config ./test/jest-performance.json --watch",
    "test:error-handling": "jest --config ./test/jest-e2e.json --testNamePattern='Error Handling|Edge Cases'",
    "test:full-flow": "jest --config ./test/jest-integration.json --testNamePattern='Full Flow'",
    "test:all": "npm run test && npm run test:e2e",
    "test:db:start": "docker-compose -f docker-compose.test.yml up -d",
    "test:db:stop": "docker-compose -f docker-compose.test.yml down",
    "test:db:logs": "docker-compose -f docker-compose.test.yml logs -f",
    "docker:build": "powershell -ExecutionPolicy Bypass -File scripts/docker-build.ps1",
    "docker:build:dev": "powershell -ExecutionPolicy Bypass -File scripts/docker-build.ps1 -Environment development",
    "docker:build:prod": "powershell -ExecutionPolicy Bypass -File scripts/docker-build.ps1 -Environment production",
    "docker:up": "docker-compose up -d",
    "docker:up:prod": "docker-compose -f docker-compose.prod.yml up -d",
    "docker:down": "docker-compose down",
    "docker:down:prod": "docker-compose -f docker-compose.prod.yml down",
    "docker:logs": "docker-compose logs -f",
    "migration:generate": "typeorm-ts-node-commonjs migration:generate -d ormconfig.ts",
    "migration:run": "typeorm-ts-node-commonjs migration:run -d ormconfig.ts",
    "migration:revert": "typeorm-ts-node-commonjs migration:revert -d ormconfig.ts",
    "migration:show": "typeorm-ts-node-commonjs migration:show -d ormconfig.ts",
    "validate:prod": "node scripts/validate-production-config.js",
    "deploy:validate": "npm run validate:prod && npm run test:all && npm run build",
    "deploy:prod": "bash scripts/deploy-production.sh",
    "deploy:monitoring": "docker-compose -f docker-compose.monitoring.yml up -d",
    "deploy:stop": "docker-compose -f docker-compose.prod.yml down && docker-compose -f docker-compose.monitoring.yml down"
  },
  "dependencies": {
    "@nestjs/axios": "^4.0.1",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/throttler": "^6.4.0",
    "@nestjs/typeorm": "^11.0.0",
    "@types/compression": "^1.8.1",
    "cache-manager": "^7.2.0",
    "cache-manager-redis-store": "^3.0.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "compression": "^1.8.1",
    "helmet": "^8.1.0",
    "nest-winston": "^1.10.2",
    "pg": "^8.16.3",
    "prom-client": "^15.1.3",
    "redis": "^5.8.2",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^5.0.1",
    "typeorm": "^0.3.26",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@types/express": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.10.7",
    "@types/pg": "^8.15.5",
    "@types/supertest": "^6.0.2",
    "@types/winston": "^2.4.4",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^30.0.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": [
        "ts-jest",
        {
          "transpilation": true
        }
      ]
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s",
      "!**/*.module.ts",
      "!**/main.ts"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 90,
        "functions": 90,
        "lines": 90,
        "statements": 90
      }
    }
  }
}
