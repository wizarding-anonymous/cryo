# PowerShell script for deploying User Service to staging environment
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è User Service –≤ staging –æ–∫—Ä—É–∂–µ–Ω–∏–∏

param(
    [switch]$SkipBuild = $false,
    [switch]$SkipTests = $false,
    [switch]$SkipValidation = $false,
    [switch]$Force = $false
)

$ErrorActionPreference = "Stop"

Write-Host "üöÄ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï USER SERVICE –í STAGING –û–ö–†–£–ñ–ï–ù–ò–ò" -ForegroundColor Green
Write-Host "=" * 60 -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
Write-Host "`nüê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Yellow
try {
    docker --version | Out-Null
    docker-compose --version | Out-Null
    Write-Host "‚úÖ Docker –∏ Docker Compose –¥–æ—Å—Ç—É–ø–Ω—ã" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker –∏–ª–∏ Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Red
    exit 1
}

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é backend
Set-Location -Path ".."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö staging –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Host "`nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö staging –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." -ForegroundColor Yellow
try {
    docker-compose -f docker-compose.staging.yml down -v --remove-orphans
    Write-Host "‚úÖ Staging –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (–≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã)" -ForegroundColor Yellow
}

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–∞)
if (-not $SkipBuild) {
    Write-Host "`nüî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..." -ForegroundColor Yellow
    try {
        # –°–±–æ—Ä–∫–∞ User Service
        docker-compose -f docker-compose.staging.yml build user-service
        
        # –°–±–æ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        docker-compose -f docker-compose.staging.yml build auth-service-staging
        docker-compose -f docker-compose.staging.yml build game-catalog-service-staging
        docker-compose -f docker-compose.staging.yml build payment-service-staging
        docker-compose -f docker-compose.staging.yml build security-service-staging
        
        Write-Host "‚úÖ Docker –æ–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑–æ–≤: $_" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "`n‚è≠Ô∏è –°–±–æ—Ä–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞ (--SkipBuild)" -ForegroundColor Yellow
}

# –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã (–±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, Redis)
Write-Host "`nüóÑÔ∏è –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..." -ForegroundColor Yellow
try {
    docker-compose -f docker-compose.staging.yml up -d postgres-user-staging postgres-auth-staging postgres-catalog-staging postgres-payment-staging postgres-security-staging redis-staging
    Write-Host "‚úÖ –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞" -ForegroundColor Green
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
    Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö (30 —Å–µ–∫—É–Ω–¥)..." -ForegroundColor Yellow
    Start-Sleep -Seconds 30
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã: $_" -ForegroundColor Red
    exit 1
}

# –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π User Service
Write-Host "`nüìä –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π User Service..." -ForegroundColor Yellow
Set-Location -Path "user-service"
try {
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    if (-not (Test-Path "node_modules")) {
        Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow
        npm ci --legacy-peer-deps
    }
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
    $env:NODE_ENV = "staging"
    npm run migration:run
    Write-Host "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π: $_" -ForegroundColor Red
    Set-Location -Path ".."
    exit 1
}
Set-Location -Path ".."

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Host "`nüöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow
try {
    docker-compose -f docker-compose.staging.yml up -d
    Write-Host "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã" -ForegroundColor Green
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
    Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (60 —Å–µ–∫—É–Ω–¥)..." -ForegroundColor Yellow
    Start-Sleep -Seconds 60
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤: $_" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Host "`nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." -ForegroundColor Yellow
docker-compose -f docker-compose.staging.yml ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health checks
Write-Host "`nüè• –ü—Ä–æ–≤–µ—Ä–∫–∞ health checks..." -ForegroundColor Yellow
$maxAttempts = 12
$attempt = 0

do {
    $attempt++
    Write-Host "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$maxAttempts..." -ForegroundColor Yellow
    
    try {
        $response = Invoke-RestMethod -Uri "http://localhost:3002/api/health/live" -TimeoutSec 10
        if ($response) {
            Write-Host "‚úÖ User Service –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ health check" -ForegroundColor Green
            break
        }
    } catch {
        if ($attempt -eq $maxAttempts) {
            Write-Host "‚ùå User Service –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ health check –ø–æ—Å–ª–µ $maxAttempts –ø–æ–ø—ã—Ç–æ–∫" -ForegroundColor Red
            Write-Host "üìã –õ–æ–≥–∏ User Service:" -ForegroundColor Yellow
            docker-compose -f docker-compose.staging.yml logs --tail=50 user-service
            exit 1
        }
        Start-Sleep -Seconds 10
    }
} while ($attempt -lt $maxAttempts)

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω—ã)
if (-not $SkipTests) {
    Write-Host "`nüß™ –ó–∞–ø—É—Å–∫ integration —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Yellow
    Set-Location -Path "user-service"
    try {
        $env:NODE_ENV = "test"
        $env:USER_SERVICE_URL = "http://localhost:3002"
        npm run test:integration
        Write-Host "‚úÖ Integration —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Integration —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã: $_" -ForegroundColor Red
        if (-not $Force) {
            Set-Location -Path ".."
            exit 1
        } else {
            Write-Host "‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –ø—Ä–æ–≤–∞–ª —Ç–µ—Å—Ç–æ–≤ (--Force)" -ForegroundColor Yellow
        }
    }
    Set-Location -Path ".."
} else {
    Write-Host "`n‚è≠Ô∏è –¢–µ—Å—Ç—ã –ø—Ä–æ–ø—É—â–µ–Ω—ã (--SkipTests)" -ForegroundColor Yellow
}

# –í–∞–ª–∏–¥–∞—Ü–∏—è staging –æ–∫—Ä—É–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–∞)
if (-not $SkipValidation) {
    Write-Host "`n‚úÖ –ó–∞–ø—É—Å–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ staging –æ–∫—Ä—É–∂–µ–Ω–∏—è..." -ForegroundColor Yellow
    Set-Location -Path "user-service"
    try {
        $env:USER_SERVICE_URL = "http://localhost:3002"
        npx ts-node -r tsconfig-paths/register scripts/validate-staging.ts
        Write-Host "‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è staging –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è staging –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞: $_" -ForegroundColor Red
        if (-not $Force) {
            Set-Location -Path ".."
            exit 1
        } else {
            Write-Host "‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –ø—Ä–æ–≤–∞–ª –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (--Force)" -ForegroundColor Yellow
        }
    }
    Set-Location -Path ".."
} else {
    Write-Host "`n‚è≠Ô∏è –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ (--SkipValidation)" -ForegroundColor Yellow
}

# –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
Write-Host "`nüìä –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..." -ForegroundColor Yellow
try {
    docker-compose -f docker-compose.staging.yml up -d prometheus-staging grafana-staging
    Write-Host "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
    Write-Host "üìä Prometheus: http://localhost:9090" -ForegroundColor Cyan
    Write-Host "üìà Grafana: http://localhost:3100 (admin/staging_admin)" -ForegroundColor Cyan
} catch {
    Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $_" -ForegroundColor Yellow
}

# –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
Write-Host "`nüéâ STAGING –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!" -ForegroundColor Green
Write-Host "=" * 60 -ForegroundColor Green

Write-Host "`nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:" -ForegroundColor Cyan
Write-Host "üîê User Service: http://localhost:3002/api" -ForegroundColor White
Write-Host "üìö API Docs: http://localhost:3002/api/api-docs" -ForegroundColor White
Write-Host "üè• Health Check: http://localhost:3002/api/health" -ForegroundColor White
Write-Host "üìä Metrics: http://localhost:3002/metrics" -ForegroundColor White
Write-Host "üîê Auth Service: http://localhost:3001" -ForegroundColor White
Write-Host "üéÆ Game Catalog: http://localhost:3003" -ForegroundColor White
Write-Host "üí≥ Payment Service: http://localhost:3006" -ForegroundColor White
Write-Host "üõ°Ô∏è Security Service: http://localhost:3010" -ForegroundColor White

Write-Host "`nüóÑÔ∏è –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞:" -ForegroundColor Cyan
Write-Host "üêò PostgreSQL User: localhost:5433" -ForegroundColor White
Write-Host "üêò PostgreSQL Auth: localhost:5432" -ForegroundColor White
Write-Host "üî¥ Redis: localhost:6379" -ForegroundColor White
Write-Host "üìä Prometheus: http://localhost:9090" -ForegroundColor White
Write-Host "üìà Grafana: http://localhost:3100" -ForegroundColor White

Write-Host "`nüîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Cyan
Write-Host "üìã –°—Ç–∞—Ç—É—Å: docker-compose -f docker-compose.staging.yml ps" -ForegroundColor White
Write-Host "üìú –õ–æ–≥–∏: docker-compose -f docker-compose.staging.yml logs -f user-service" -ForegroundColor White
Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f docker-compose.staging.yml down" -ForegroundColor White
Write-Host "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose -f docker-compose.staging.yml restart user-service" -ForegroundColor White

Write-Host "`n‚úÖ User Service –≥–æ—Ç–æ–≤ –∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –≤ staging –æ–∫—Ä—É–∂–µ–Ω–∏–∏!" -ForegroundColor Green