# This is a template file - DO NOT commit actual secrets to git
# Use kubectl create secret or external secret management tools

apiVersion: v1
kind: Secret
metadata:
  name: user-service-secrets
  namespace: user-service
type: Opaque
stringData:
  # Database connection
  database-url: "postgresql://username:password@postgres-service:5432/userservice"
  
  # Redis connection
  redis-url: "redis://redis-service:6379"
  
  # JWT secrets - MUST be changed in production
  jwt-secret: "your-super-secret-jwt-key-change-this-in-production"
  jwt-refresh-secret: "your-super-secret-refresh-key-change-this-in-production"
  
  # OAuth secrets
  vk-client-id: "your-vk-client-id"
  vk-client-secret: "your-vk-client-secret"
  yandex-client-id: "your-yandex-client-id"
  yandex-client-secret: "your-yandex-client-secret"
  
  # Russian SSO secrets
  gosuslugi-client-id: "your-gosuslugi-client-id"
  gosuslugi-client-secret: "your-gosuslugi-client-secret"
  
  # Email service
  smtp-host: "smtp.example.com"
  smtp-user: "noreply@cryo-platform.ru"
  smtp-password: "your-smtp-password"
  
  # SMS service
  sms-api-key: "your-sms-api-key"
  
  # Monitoring
  prometheus-password: "your-prometheus-password"
  grafana-password: "your-grafana-password"

---
# Example of using external secrets operator
# apiVersion: external-secrets.io/v1beta1
# kind: SecretStore
# metadata:
#   name: vault-backend
#   namespace: user-service
# spec:
#   provider:
#     vault:
#       server: "https://vault.example.com"
#       path: "secret"
#       version: "v2"
#       auth:
#         kubernetes:
#           mountPath: "kubernetes"
#           role: "user-service"