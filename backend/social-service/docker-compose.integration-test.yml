version: '3.8'

services:
  # Social Service
  social-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=test
      - PORT=3003
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=social_user
      - DATABASE_PASSWORD=social_password
      - DATABASE_NAME=social_test_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=test-jwt-secret-for-integration
      - INTERNAL_API_TOKEN=test-internal-token
      - LOG_LEVEL=info
      - USER_SERVICE_URL=http://user-service:3001
      - NOTIFICATION_SERVICE_URL=http://notification-service:3004
      - ACHIEVEMENT_SERVICE_URL=http://achievement-service:3005
      - REVIEW_SERVICE_URL=http://review-service:3006
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      user-service:
        condition: service_healthy
      notification-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - integration-test-network

  # Mock User Service
  user-service:
    image: node:18-alpine
    ports:
      - "3001:3001"
    working_dir: /app
    volumes:
      - ./test/mocks/user-service:/app
    command: ["node", "server.js"]
    environment:
      - PORT=3001
      - NODE_ENV=test
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - integration-test-network

  # Mock Notification Service
  notification-service:
    image: node:18-alpine
    ports:
      - "3004:3004"
    working_dir: /app
    volumes:
      - ./test/mocks/notification-service:/app
    command: ["node", "server.js"]
    environment:
      - PORT=3004
      - NODE_ENV=test
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3004/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - integration-test-network

  # Mock Achievement Service
  achievement-service:
    image: node:18-alpine
    ports:
      - "3005:3005"
    working_dir: /app
    volumes:
      - ./test/mocks/achievement-service:/app
    command: ["node", "server.js"]
    environment:
      - PORT=3005
      - NODE_ENV=test
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3005/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - integration-test-network

  # Mock Review Service
  review-service:
    image: node:18-alpine
    ports:
      - "3006:3006"
    working_dir: /app
    volumes:
      - ./test/mocks/review-service:/app
    command: ["node", "server.js"]
    environment:
      - PORT=3006
      - NODE_ENV=test
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3006/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - integration-test-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=social_test_db
      - POSTGRES_USER=social_user
      - POSTGRES_PASSWORD=social_password
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./test/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U social_user -d social_test_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - integration-test-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - integration-test-network

  # Integration Test Runner
  integration-tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - SOCIAL_SERVICE_URL=http://social-service:3003
      - USER_SERVICE_URL=http://user-service:3001
      - NOTIFICATION_SERVICE_URL=http://notification-service:3004
      - ACHIEVEMENT_SERVICE_URL=http://achievement-service:3005
      - REVIEW_SERVICE_URL=http://review-service:3006
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=social_user
      - DATABASE_PASSWORD=social_password
      - DATABASE_NAME=social_test_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=test-jwt-secret-for-integration
      - INTERNAL_API_TOKEN=test-internal-token
    depends_on:
      social-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
      notification-service:
        condition: service_healthy
      achievement-service:
        condition: service_healthy
      review-service:
        condition: service_healthy
    volumes:
      - ./test/integration:/app/test/integration
      - ./test-results:/app/test-results
    command: ["npm", "run", "test:integration"]
    networks:
      - integration-test-network

volumes:
  postgres_test_data:
  redis_test_data:

networks:
  integration-test-network:
    driver: bridge