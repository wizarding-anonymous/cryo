apiVersion: apps/v1
kind: Deployment
metadata:
  name: social-service
  labels:
    app: social-service
    version: v1
  annotations:
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: social-service
  template:
    metadata:
      labels:
        app: social-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3003"
        prometheus.io/path: "/metrics"
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: social-service
          image: social-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3003
              protocol: TCP
          envFrom:
            - configMapRef:
                name: social-service-config
          env:
            - name: NODE_ENV
              value: production
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: social-service-secrets
                  key: DATABASE_HOST
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: social-service-secrets
                  key: DATABASE_USERNAME
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: social-service-secrets
                  key: DATABASE_PASSWORD
            - name: DATABASE_NAME
              value: social_db
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: social-service-secrets
                  key: REDIS_HOST
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: social-service-secrets
                  key: REDIS_PASSWORD
                  optional: true
            - name: CACHE_STORE
              value: redis
            - name: INTERNAL_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: social-service-secrets
                  key: INTERNAL_API_TOKEN
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: social-service-secrets
                  key: JWT_SECRET
          readinessProbe:
            httpGet:
              path: /v1/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /v1/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /v1/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 12
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 15"]
