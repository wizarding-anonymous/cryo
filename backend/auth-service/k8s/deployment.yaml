# =============================================================================
# Kubernetes Deployment for Auth Service
# Production-ready configuration with security and observability
# =============================================================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: gaming-platform
  labels:
    app: auth-service
    version: v1.0.0
    tier: backend
    component: authentication
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
        version: v1.0.0
        tier: backend
        component: authentication
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/api/metrics"
    spec:
      # Security context for the pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      
      # Service account for RBAC
      serviceAccountName: auth-service
      
      # Init container for database migrations
      initContainers:
      - name: migration
        image: auth-service:latest
        command: ["npm", "run", "migration:run"]
        env:
        - name: NODE_ENV
          value: "production"
        envFrom:
        - secretRef:
            name: auth-service-secrets
        - configMapRef:
            name: auth-service-config
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      
      containers:
      - name: auth-service
        image: auth-service:latest
        imagePullPolicy: Always
        
        # Container security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        
        # Container ports
        ports:
        - name: http
          containerPort: 3001
          protocol: TCP
        
        # Environment variables
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: HEALTH_CHECK_SILENT
          value: "true"
        
        # Environment from secrets and config maps
        envFrom:
        - secretRef:
            name: auth-service-secrets
        - configMapRef:
            name: auth-service-config
        
        # Resource limits and requests
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "1Gi"
            cpu: "1000m"
            ephemeral-storage: "2Gi"
        
        # Liveness probe
        livenessProbe:
          httpGet:
            path: /api/health/live
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        
        # Readiness probe
        readinessProbe:
          httpGet:
            path: /api/health/ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        # Startup probe
        startupProbe:
          httpGet:
            path: /api/health/ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 12
        
        # Volume mounts for temporary storage
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
        
        # Lifecycle hooks
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      
      # Volumes for temporary storage
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      - name: logs
        emptyDir:
          sizeLimit: 50Mi
      
      # Pod disruption budget
      terminationGracePeriodSeconds: 30
      
      # Node selection and affinity
      nodeSelector:
        kubernetes.io/arch: amd64
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - auth-service
              topologyKey: kubernetes.io/hostname
      
      # Tolerations for node taints
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---
# =============================================================================
# Service Account for RBAC
# =============================================================================

apiVersion: v1
kind: ServiceAccount
metadata:
  name: auth-service
  namespace: gaming-platform
  labels:
    app: auth-service

---
# =============================================================================
# Pod Disruption Budget
# =============================================================================

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: auth-service-pdb
  namespace: gaming-platform
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: auth-service